(root (block (def (func (atom 'key-value-stores') (args ( )) (lra ->) (seqExprs (expr (matchable (var M')) = (expr (exprMax (term (map (mapEmpty #{ })))))) (expr (matchable (var R')) = (expr (exprMax (record (recEmpty #{ (atom r) }))))) (expr (matchable (var M0)) = (expr (exprMax (term (map (mapCreateMatch #{ (mapAssocs (mapAssoc (expr (exprMax (term (atom k)))) => (expr (exprMax (term (atom v)))))) })))))) (expr (matchable (var R0)) = (expr (exprMax (record (recCreateMatch #{ (atom r) (recAssocs (recAssoc (atom k) = (expr (exprMax (term (atom v)))))) }))))) (expr (matchable (var M1)) = (expr (exprMax (term (map #{ (expr (exprMax (var M0))) (mapAssocs (mapAssoc (expr (exprMax (term (atom k)))) := (expr (exprMax (term (atom v2)))))) }))))) (expr (matchable (var R1)) = (expr (exprMax (record #{ (expr (exprMax (var R0))) (atom r) (recAssocs (recAssoc (atom k) = (expr (exprMax (term (atom v2)))))) })))) (expr (matchable (var V)) = (expr (exprMax (term (map (mapRead #{ (expr (exprMax (var M1))) (exprMax (term (atom k))) })))))) (expr (matchable (var V)) = (expr (exprMax (record (recRead #{ (expr (exprMax (var R1))) (atom r) (atom k) }))))) (expr (matchable (term (map (mapCreateMatch #{ (mapAssocs (mapAssoc (expr (exprMax (term (atom k)))) := (expr (exprMax (var V))))) })))) = (expr (exprMax (var M1)))) (expr (matchable (record (recCreateMatch #{ (atom r) (recAssocs (recAssoc (atom k) = (expr (exprMax (var V))))) }))) = (expr (exprMax (var R1)))))))) <EOF>)
