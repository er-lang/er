(root (block (def (func (atom 'p&to_list') (args ( (matchables (matchable (var Arg))) )) = (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (case_ case (exprA (last (lastOnly (var Arg)))) (of of (clauses (clauseGuard (matchable (var T)) (guard (when |) (exprA (last (functionCall (mf (lastOnly (atom is_tuple))) (params ( (exprAs (exprA (last (lastOnly (var T))))) )))))) (lra ->) (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (lc [ (seqExprs (functionCall (mf (lastOnly (atom p))) (params ( (exprAs (exprA (last (lastOnly (var X))))) ))) (lastOnly (var X))) (gens (gen_ | (gen (matchable (var X)) (generator <~) (exprA (last (lastOnly (var T))))))) ]))))))))))))) (clauseGuard (matchable (var L)) (guard (when |) (exprA (last (functionCall (mf (lastOnly (atom is_list))) (params ( (exprAs (exprA (last (lastOnly (var L))))) )))))) (lra ->) (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (lc [ (seqExprs (functionCall (mf (lastOnly (atom p))) (params ( (exprAs (exprA (last (lastOnly (var X))))) ))) (lastOnly (var X))) (gens (gen_ | (gen (matchable (var X)) (generator <-) (exprA (last (lastOnly (var L))))))) ]))))))))))))) (clauseGuard (matchable (var B)) (guard (when |) (exprA (last (functionCall (mf (lastOnly (atom is_binary))) (params ( (exprAs (exprA (last (lastOnly (var B))))) )))))) (lra ->) (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (lc [ (seqExprs (functionCall (mf (lastOnly (atom p))) (params ( (exprAs (exprA (last (lastOnly (var X))))) ))) (lastOnly (var X))) (gens (gen_ | (gen (matchable (var X)) (generator <=) (exprA (last (lastOnly (var B))))))) ]))))))))))))))) end))))))))))))))) <EOF>)
