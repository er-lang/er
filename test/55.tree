(root (block (def (func (atom nesting) (args ( )) (lra ->) (seqExprs (expr (matchable (var R)) = (expr (exprMax (record (recCreateMatch #{ (atom person) (recAssocs (recAssoc (atom name) = (expr (exprMax (record (recCreateMatch #{ (atom name) (recAssocs (recAssoc (atom first) = (expr (exprMax (term (string "Robert"))))) , (recAssoc (atom last) = (expr (exprMax (term (string "Virding")))))) }))))) , (recAssoc (atom phone) = (expr (expr (exprMax (term (integer 120)))) (addOp +) (expr (exprMax (term (integer 3))))))) }))))) (expr (matchable (var First)) = (expr (exprMax (record (recRead #{ (expr (exprMax (record (recRead #{ (expr (exprMax (var R))) (atom person) (atom name) })))) (atom name) (atom first) }))))) (expr (matchable (var M)) = (expr (exprMax (term (map (mapCreateMatch #{ (mapAssocs (mapAssoc (expr (exprMax (term (atom name)))) => (expr (exprMax (term (map (mapCreateMatch #{ (mapAssocs (mapAssoc (expr (exprMax (term (atom first)))) => (expr (exprMax (term (string "Robert"))))) , (mapAssoc (expr (exprMax (term (atom last)))) => (expr (exprMax (term (string "Virding")))))) })))))) , (mapAssoc (expr (exprMax (term (atom phone)))) => (expr (expr (exprMax (term (integer 120)))) (addOp +) (expr (exprMax (term (integer 3))))))) })))))) (expr (matchable (var First)) = (expr (exprMax (term (map (mapRead #{ (expr (exprMax (term (map (mapRead #{ (expr (exprMax (var M))) (exprMax (term (atom name))) }))))) (exprMax (term (atom first))) })))))))))) <EOF>)
