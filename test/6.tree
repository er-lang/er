(root (block (def (func (atom 'f') (args ( )) (lra ->) (seqExprs (expr (receive receive (clauses (clauseGuard (matchable (term (tuple { (exprs (expr (exprMax (term (atom 'ok')))) , (expr (exprMax (var WrongRef)))) }))) (guard (when when) (expr (functionCall (mf (exprMax (term (atom 'is_reference')))) (params ( (exprs (expr (exprMax (var WrongRef)))) ))))) (lra ->) (seqExprs (expr (functionCall (mf (exprMax (term (atom 'smth')))) (params ( )))) (expr (exprMax (term (atom 'not the one')))))) (clause (matchable (term (atom 'error'))) (lra ->) (seqExprs (expr (exprMax (term (tuple { (exprs (expr (exprMax (term (atom 'ignore')))) , (expr (exprMax (term (atom 'not_monitored')))) , (expr (exprMax (var FD)))) }))))))) end)))))) <EOF>)
