(root (block (def (func (atom f) (args ( )) (lra ->) (seqExprs (expr (case_ case (expr (functionCall (mf_ (exprMax (term (atom orddict))) : (exprMax (term (atom find)))) (params ( (exprs (expr (exprMax (var Node))) , (expr (exprMax (var Nodes)))) )))) (of of (clauses (clause (matchable (term (tuple { (exprs (expr (exprMax (term (atom ok)))) , (expr (exprMax (var Ref)))) }))) (lra ->) (seqExprs (expr (exprMax (term (tuple { (exprs (expr (exprMax (term (atom down)))) , (expr (exprMax (term (atom node)))) , (expr (exprMax (var Ref)))) })))))) (clauseGuard (matchable (term (tuple { (exprs (expr (exprMax (term (atom ok)))) , (expr (exprMax (var WrongRef)))) }))) (guard (when |) (expr (functionCall (mf (exprMax (term (atom is_reference)))) (params ( (exprs (expr (exprMax (var WrongRef)))) ))))) (lra ->) (seqExprs (expr (exprMax (term (atom 'not the one')))))) (clause (matchable (term (atom error))) (lra ->) (seqExprs (expr (exprMax (term (tuple { (exprs (expr (exprMax (term (atom ignore)))) , (expr (exprMax (term (atom not_monitored)))) , (expr (exprMax (var FD)))) })))))))) end)))))) <EOF>)
