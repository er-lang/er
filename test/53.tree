(root (block (defty (atom red_panda_food) ( ) :: (tyMax (type (atom bamboo)) | (type (atom birds)) | (type (atom eggs)) | (type (atom berries))))) (block (defty (atom squid_food) ( ) :: (tyMax (type (atom sperm_whale))))) (block (defty (atom feed) ( (tyMaxs (tyMax (type (var A)))) ) :: (tyMax (type (fun_ fun) ( (tyFun ( ) (lra ->) (tyMax (type (var A)))) ))))) (block (def (spec (atom feeder) :: (tyFun ( (tyMaxs (tyMax (type (atom red_panda)))) ) (lra ->) (tyMax (type (subtype (atom feed) ( (tyMaxs (tyMax (type (subtype (atom red_panda_food) ( ))))) )))))) (func (atom feeder) (args ( (matchables (matchable (term (atom red_panda)))) )) = (seqExprs (expr (fun (fun_ fun) (funClause (args ( )) (lra ->) (seqExprs (expr (exprMax (term (atom bamboo)))))) end)))))) (block (def (spec (atom feeder) :: (tyFun ( (tyMaxs (tyMax (type (atom squid)))) ) (lra ->) (tyMax (type (subtype (atom feed) ( (tyMaxs (tyMax (type (subtype (atom squid_food) ( ))))) )))))) (func (atom feeder) (args ( (matchables (matchable (term (atom squid)))) )) = (seqExprs (expr (fun (fun_ fun) (funClause (args ( )) (lra ->) (seqExprs (expr (exprMax (term (atom sperm_whale)))))) end)))))) <EOF>)
