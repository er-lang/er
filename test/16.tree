(root (block (def (func (atom brilliant!) (args ( )) (lra ->) (seqExprs (expr (bc (bil <<) (seqExprs (expr (case_ case (expr (exprMax (var X))) (of of (clauses (clauseGuard (matchable (var Z)) (guard (when |) (expr (functionCall (mf (exprMax (term (atom m)))) (params ( (exprs (expr (exprMax (var Z)))) ))))) (lra ->) (seqExprs (expr (exprMax (term (integer 0)))))) (clause (matchable (var Y)) (lra ->) (seqExprs (expr (exprMax (term (integer 1)))))))) end))) (gens (gen_ | (gen (matchable (var X)) (generator <~) (expr (exprMax (var _)))))) (bir >>))))))) <EOF>)
