(root (block (defty (atom ty_long_var_assoc) ( ) :: (tyMax (type (subtype (atom f) ( (tyMaxs (tyMax (type (var T))) , (tyMax (type (var Q))) , (tyMax (type (var W)))) )))) (when when) (tyGuards (tyGuard (var T) :: (var Q) :: (var W) :: (tyMax (type (subtype (atom text) ( )))))))) (block (defty (atom processor) ( ) :: (tyMax (type (fun_ fun) ( (tyFun ( (tyMaxs (tyMax (type (var T)))) ) (lra ->) (tyMax (type (var T)))) ))) (when when) (tyGuards (tyGuard (var T) :: (tyMax (type (subtype (atom text) ( )))))))) (block (def (spec (atom analyze) :: (tyFun ( (tyMaxs (tyMax (type [ (tyMax (type (tyRecord #{ (atom document) }))) ])) , (tyMax (type [ (tyMax (type (subtype (atom processor) ( )))) ]))) ) (lra ->) (tyMax (type [ (tyMax (type (tyRecord #{ (atom tokenized_document) }))) ])))) (func (atom analyze) (args ( (matchables (matchable (var Documents)) , (matchable (var Processors))) )) = (seqExprs (functionCall (mf_ (lastOnly (atom plists)) : (lastOnly (atom map))) (params ( (exprAs (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (fun (fun_ fun) (funClause (args ( (matchables (matchable (var Document))) )) (lra ->) (seqExprs (expr (lastOnly (var Words)) = (last (functionCall (mf (lastOnly (atom tokenize))) (params ( (exprAs (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (record #{ (exprA (last (lastOnly (var Document)))) (atom document) > (atom text) })))))))))))) , (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (term (string рс))))))))))))) , (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (term (list [ ])))))))))))))) ))))) (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (record #{ (atom tokenized_document) > (recAssocs (recAssoc (atom url) = (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (record #{ (exprA (last (lastOnly (var Document)))) (atom document) > (atom url) }))))))))))))) , (recAssoc (atom words) = (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (lc [ (seqExprs (functionCall (mf (lastOnly (atom apply_processors))) (params ( (exprAs (exprA (last (lastOnly (var Processors)))) , (exprA (last (lastOnly (var Word))))) )))) (gens (gen_ | (gen (matchable (var Word)) (generator <-) (exprA (last (lastOnly (var Words))))))) ])))))))))))))) }))))))))))))) end)))))))))))) , (exprA (last (lastOnly (var Documents))))) ))))))) (block (def (spec (fa (atom normalizer) / (integer 1)) :: (subtype (atom processor) ( ))) (func (atom normalizer) (args ( (matchables (matchable (var Word))) )) = (seqExprs (functionCall (mf (lastOnly (atom processor))) (params ( (exprAs (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (fun (fun_ fun) (mf_ (lastOnly (atom string)) : (lastOnly (atom to_lower))) / (integer 1))))))))))))) , (exprA (last (lastOnly (var Word))))) ))))))) (block (def (spec (atom processor) :: (tyFun ( (tyMaxs (tyMax (type (subtype (atom processor) ( )))) , (tyMax (type (var T)))) ) (lra ->) (tyMax (type (var T)))) (when |) (tyGuards (tyGuard (var T) :: (tyMax (type (subtype (atom text) ( ))))))) (func (atom processor) (args ( (matchables (matchable (var Fun)) , (matchable (var Binary))) )) = (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (bc << (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (term (binary << (binElements (binElement (exprA (last (lastOnly (var E)))))) >>))))))))))) = (last (lastOnly (var Element)))) (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (term (binary << (binElements (binElement (exprA (last (functionCall (mf (lastOnly (var Fun))) (params ( (exprAs (exprA (last (lastOnly (var E))))) ))))))) >>))))))))))))) (gens (gen_ | (gen (matchable (term (binary << (binElements (binElement (exprA (last (lastOnly (var Element)))) : (exprM (exprMax (term (integer 1)))) / (binType (atom binary)))) >>))) (generator <=) (exprA (last (lastOnly (var Binary))))))) >>))))))))))))))) <EOF>)
