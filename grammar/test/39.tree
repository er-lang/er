(root (block (def (fun_func (fa (atom factorial') / (integer 1)) = (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (fun (fun_ fun) (funClause (args ( (matchables (matchable (atom f))) )) (lra ->) (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (fun (fun_ fun) (mf :) / (integer 1)))))))))))))) (funClause (args ( (matchables (matchable (atom f'))) )) (lra ->) (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (fun (fun_ fun) (mf :) (args ( )) / (integer 1)))))))))))))) (funClause (args ( (matchables (matchable (term (integer 0)))) )) (lra ->) (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (term (integer 1)))))))))))))) (funClause (args ( (matchables (matchable (var N))) )) (guard (when when) (exprA (expr (expr125 (expr150 (expr160 (expr200 (last (lastOnly (var N))) (compOp >) (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (term (integer 0))))))))))))))) (lra ->) (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (last (lastOnly (var N))) (mulOp *) (last (functionCall (mf :) (params ( (exprAs (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (last (lastOnly (var N))) (addOp -) (expr400 (expr500 (expr600 (exprMax (term (integer 1))))))))))))))) )))))))))))))) (funClause (args ( (matchables (matchable (atom f24))) )) (lra ->) (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (fun (fun_ fun) (mf :) (args ( (matchables (matchable (term (integer 4)))) )) / (integer 0)))))))))))))) (funClause (args ( (matchables (matchable (var ___))) )) (lra ->) (seqExprs (functionCall (mf :) (params ( (exprAs (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (term (integer 4)))))))))))))) ))))) end))))))))))))))) <EOF>)
