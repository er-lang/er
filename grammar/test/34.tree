(root (block (def (spec (atom zip) :: (tyFun ( (tyMaxs (tyMax (tyMaxAlt (type [ (tyMax (tyMaxAlt (type (subtype (angll <) (atom term) (anglr >))))) ]))) , (tyMax (tyMaxAlt (type [ (tyMax (tyMaxAlt (type (subtype (angll <) (atom term) (anglr >))))) ])))) ) (lra ->) (tyMax (tyMaxAlt (type [ (tyMax (tyMaxAlt (type { (tyMaxs (tyMax (tyMaxAlt (type (subtype (angll <) (atom term) (anglr >))))) , (tyMax (tyMaxAlt (type (subtype (angll <) (atom term) (anglr >)))))) }))) ]))))) (func (atom zip) (args ( (matchables (matchable (list [ (exprA (lastOnly (var X))) (tail | (exprA (lastOnly (var Xs))) ]))) , (matchable (list [ (exprA (lastOnly (var Y))) (tail | (exprA (lastOnly (var Ys))) ])))) )) = (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (lc [ (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (tuple { (exprAs (exprA (lastOnly (var X'))) , (exprA (lastOnly (var Y')))) })))))))))))) (gens (gen_ | (gen (matchable (var X')) (generator <-) (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (list [ (exprA (lastOnly (var X))) (tail | (exprA (lastOnly (var Xs))) ]))))))))))))))) (gen_ | (gen (matchable (var Y')) (generator <-) (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (list [ (exprA (lastOnly (var Y))) (tail | (exprA (lastOnly (var Ys))) ])))))))))))))))) ]))))))))))))))) (block (def (func (atom zip) (args ( (matchables (matchable (list [ ])) , (matchable (list [ ]))) )) = (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (list [ ]))))))))))))))) <EOF>)
