(root (block (def (func (atom i-am-impressed) (args ( )) = (seqExprs (functionCall (mf (lastOnly (atom work))) (params ( ))) (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (try_ try (seqExprs (functionCall (mf (lastOnly (atom talk))) (params ( ))) (expr (lastOnly (var _Knight)) = (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (atomic (string "None shall Pass!"))))))))))))) (expr (lastOnly (var _Doubles)) = (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (lc [ (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (atomic (integer 2)))) (mulOp *) (last (lastOnly (var N)))))))))))) (gens (gen_ | (gen (matchable (var N)) (generator <-) (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (lr [ (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (atomic (integer 1))))))))))))) .. (exprA (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (atomic (integer 100))))))))))))) ]))))))))))))))) ])))))))))))) (functionCall (mf (lastOnly (atom throw))) (params ( (exprAs (exprA (last (lastOnly (atom up))))) ))) (expr (lastOnly (var _WillReturnThis)) = (last (lastOnly (atom tequila))))) catch (catchClauses (catchClause (exprM (lastOnly (var Exception))) : (clause (matchable (var Reason)) (lra ->) (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (tuple { (exprAs (exprA (last (lastOnly (atom caught)))) , (exprA (last (lastOnly (var Exception)))) , (exprA (last (lastOnly (var Reason))))) }))))))))))))))) end))))))))))))))) <EOF>)
