(root (block (def (func (atom tryÉcatch) (args ( )) = (seqExprs (expr (expr125 (expr150 (expr160 (expr200 (expr300 (expr400 (expr500 (expr600 (exprMax (try_ try (seqExprs (functionCall (mf (lastOnly (atom bla))) (params ( ))) (lastOnly (var Expression))) (of of (clauses (clause (matchable (var SuccessfulPattern1)) (lra ->) (seqExprs (lastOnly (var Expression1)))) (clause (matchable (var SuccessfulPattern2)) (lra ->) (seqExprs (lastOnly (var Expression2)))))) catch (catchClauses (catchClause (exprM (lastOnly (var TypeOfError))) : (clause (matchable (var ExceptionPattern1)) (lra ->) (seqExprs (lastOnly (var Expression3))))) (catchClause (exprM (lastOnly (var TypeOfError))) : (clause (matchable (var ExceptionPattern2)) (lra ->) (seqExprs (lastOnly (var Expression4)))))) end))))))))))))))) <EOF>)
